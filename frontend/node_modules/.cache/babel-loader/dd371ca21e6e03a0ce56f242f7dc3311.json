{"ast":null,"code":"var _jsxFileName = \"/home/kali/Downloads/Modus_Mapping/frontend/src/App.js\";\nimport React, { useState, useEffect } from \"react\";\nimport { login, getCrimes } from \"./api\";\nimport CrimeForm from \"./components/CrimeForm\";\nimport CrimeList from \"./components/CrimeList\";\nimport Heatmap from \"./components/Heatmap\";\nimport GraphView from \"./components/GraphView\";\nimport \"./styles.css\";\nfunction App() {\n  const [crimes, setCrimes] = useState([]);\n  const [token, setToken] = useState(\"\");\n  const [darkMode, setDarkMode] = useState(false);\n\n  // Dark mode toggle\n  const toggleDarkMode = () => setDarkMode(prev => !prev);\n\n  // Handle login\n  const handleLogin = async () => {\n    try {\n      const response = await login(\"admin\", \"admin\");\n      if (response === null || response === void 0 ? void 0 : response.access_token) {\n        setToken(response.access_token);\n      }\n    } catch (error) {\n      console.error(\"Login failed:\", error);\n    }\n  };\n\n  // Fetch crime data\n  const fetchCrimes = async () => {\n    if (token) {\n      try {\n        const data = await getCrimes(token);\n        setCrimes(data);\n      } catch (error) {\n        console.error(\"Failed to fetch crimes:\", error);\n      }\n    }\n  };\n  useEffect(() => {\n    if (token) fetchCrimes();\n  }, [token]);\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: darkMode ? \"dark-mode\" : \"light-mode\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"header\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"button\", {\n    onClick: toggleDarkMode,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 17\n    }\n  }, darkMode ? \"Light Mode\" : \"Dark Mode\"), /*#__PURE__*/React.createElement(\"button\", {\n    onClick: handleLogin,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 17\n    }\n  }, \"Login\")), /*#__PURE__*/React.createElement(\"main\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(CrimeForm, {\n    token: token,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 17\n    }\n  }), /*#__PURE__*/React.createElement(CrimeList, {\n    crimes: crimes,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 17\n    }\n  }), /*#__PURE__*/React.createElement(Heatmap, {\n    crimes: crimes,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 17\n    }\n  }), /*#__PURE__*/React.createElement(GraphView, {\n    crimes: crimes,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 17\n    }\n  })));\n}\nexport default App;","map":{"version":3,"names":["React","useState","useEffect","login","getCrimes","CrimeForm","CrimeList","Heatmap","GraphView","App","crimes","setCrimes","token","setToken","darkMode","setDarkMode","toggleDarkMode","prev","handleLogin","response","access_token","error","console","fetchCrimes","data","createElement","className","__self","__source","fileName","_jsxFileName","lineNumber","columnNumber","onClick"],"sources":["/home/kali/Downloads/Modus_Mapping/frontend/src/App.js"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport { login, getCrimes } from \"./api\";\nimport CrimeForm from \"./components/CrimeForm\";\nimport CrimeList from \"./components/CrimeList\";\nimport Heatmap from \"./components/Heatmap\";\nimport GraphView from \"./components/GraphView\";\nimport \"./styles.css\";\n\nfunction App() {\n    const [crimes, setCrimes] = useState([]);\n    const [token, setToken] = useState(\"\");\n    const [darkMode, setDarkMode] = useState(false);\n\n    // Dark mode toggle\n    const toggleDarkMode = () => setDarkMode((prev) => !prev);\n\n    // Handle login\n    const handleLogin = async () => {\n        try {\n            const response = await login(\"admin\", \"admin\");\n            if (response?.access_token) {\n                setToken(response.access_token);\n            }\n        } catch (error) {\n            console.error(\"Login failed:\", error);\n        }\n    };\n\n    // Fetch crime data\n    const fetchCrimes = async () => {\n        if (token) {\n            try {\n                const data = await getCrimes(token);\n                setCrimes(data);\n            } catch (error) {\n                console.error(\"Failed to fetch crimes:\", error);\n            }\n        }\n    };\n\n    useEffect(() => {\n        if (token) fetchCrimes();\n    }, [token]);\n\n    return (\n        <div className={darkMode ? \"dark-mode\" : \"light-mode\"}>\n            <header>\n                <button onClick={toggleDarkMode}>\n                    {darkMode ? \"Light Mode\" : \"Dark Mode\"}\n                </button>\n                <button onClick={handleLogin}>Login</button>\n            </header>\n\n            <main>\n                <CrimeForm token={token} />\n                <CrimeList crimes={crimes} />\n                <Heatmap crimes={crimes} />\n                <GraphView crimes={crimes} />\n            </main>\n        </div>\n    );\n}\n\nexport default App;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module"}